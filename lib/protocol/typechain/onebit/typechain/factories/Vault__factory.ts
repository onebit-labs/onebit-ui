/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers'
import type { Provider, TransactionRequest } from '@ethersproject/providers'
import type { PromiseOrValue } from '../common'
import type { Vault, VaultInterface } from '../Vault'

const _abi = [
  {
    inputs: [] as any,
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'user',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'expirationTime',
        type: 'uint256',
      },
    ],
    name: 'AddedToWhitelist',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'user',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'onBehalfOf',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
      {
        indexed: true,
        internalType: 'uint16',
        name: 'referral',
        type: 'uint16',
      },
    ],
    name: 'Deposit',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'newFundAddress',
        type: 'address',
      },
    ],
    name: 'FundAddressUpdated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'FundDeposit',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'FundWithdraw',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint256',
        name: 'previousNetValue',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'newNetValue',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'previousLiquidityIndex',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'newLiquidityIndex',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'int256',
        name: 'currentLiquidityRate',
        type: 'int256',
      },
    ],
    name: 'NetValueUpdated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [] as any,
    name: 'Paused',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint256',
        name: 'previousLiquidityIndex',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint40',
        name: 'purchaseBeginTimestamp',
        type: 'uint40',
      },
      {
        indexed: false,
        internalType: 'uint40',
        name: 'purchaseEndTimestamp',
        type: 'uint40',
      },
      {
        indexed: false,
        internalType: 'uint40',
        name: 'redemptionBeginTimestamp',
        type: 'uint40',
      },
      {
        indexed: false,
        internalType: 'uint16',
        name: 'managementFeeRate',
        type: 'uint16',
      },
      {
        indexed: false,
        internalType: 'uint16',
        name: 'performanceFeeRate',
        type: 'uint16',
      },
    ],
    name: 'PeriodInitialized',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint40',
        name: 'previousTimestamp',
        type: 'uint40',
      },
      {
        indexed: false,
        internalType: 'uint40',
        name: 'newTimetamp',
        type: 'uint40',
      },
    ],
    name: 'PurchaseEndTimestampMoved',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint40',
        name: 'previousTimestamp',
        type: 'uint40',
      },
      {
        indexed: false,
        internalType: 'uint40',
        name: 'newTimetamp',
        type: 'uint40',
      },
    ],
    name: 'RedemptionBeginTimestampMoved',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'user',
        type: 'address',
      },
    ],
    name: 'RemoveFromWhitelist',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [] as any,
    name: 'Unpaused',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint256',
        name: 'newExpiration',
        type: 'uint256',
      },
    ],
    name: 'WhitelistExpirationUpdated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'user',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'Withdraw',
    type: 'event',
  },
  {
    inputs: [] as any,
    name: 'VAULT_REVISION',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'user',
        type: 'address',
      },
    ],
    name: 'addToWhitelist',
    outputs: [] as any,
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address[]',
        name: 'users',
        type: 'address[]',
      },
    ],
    name: 'batchAddToWhitelist',
    outputs: [] as any,
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address[]',
        name: 'users',
        type: 'address[]',
      },
    ],
    name: 'batchRemoveFromWhitelist',
    outputs: [] as any,
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
      {
        internalType: 'address',
        name: 'onBehalfOf',
        type: 'address',
      },
      {
        internalType: 'uint16',
        name: 'referralCode',
        type: 'uint16',
      },
    ],
    name: 'deposit',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'depositFund',
    outputs: [] as any,
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [] as any,
    name: 'getAddressesProvider',
    outputs: [
      {
        internalType: 'contract IVaultAddressesProvider',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [] as any,
    name: 'getConfiguration',
    outputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'data',
            type: 'uint256',
          },
        ],
        internalType: 'struct DataTypes.ReserveConfigurationMap',
        name: '',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [] as any,
    name: 'getReserveData',
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: 'uint256',
                name: 'data',
                type: 'uint256',
              },
            ],
            internalType: 'struct DataTypes.ReserveConfigurationMap',
            name: 'configuration',
            type: 'tuple',
          },
          {
            internalType: 'uint128',
            name: 'liquidityIndex',
            type: 'uint128',
          },
          {
            internalType: 'int128',
            name: 'currentLiquidityRate',
            type: 'int128',
          },
          {
            internalType: 'uint128',
            name: 'previousLiquidityIndex',
            type: 'uint128',
          },
          {
            internalType: 'uint128',
            name: 'purchaseUpperLimit',
            type: 'uint128',
          },
          {
            internalType: 'uint40',
            name: 'lastUpdateTimestamp',
            type: 'uint40',
          },
          {
            internalType: 'uint40',
            name: 'purchaseBeginTimestamp',
            type: 'uint40',
          },
          {
            internalType: 'uint40',
            name: 'purchaseEndTimestamp',
            type: 'uint40',
          },
          {
            internalType: 'uint40',
            name: 'redemptionBeginTimestamp',
            type: 'uint40',
          },
          {
            internalType: 'uint16',
            name: 'managementFeeRate',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'performanceFeeRate',
            type: 'uint16',
          },
          {
            internalType: 'address',
            name: 'oTokenAddress',
            type: 'address',
          },
          {
            internalType: 'address',
            name: 'fundAddress',
            type: 'address',
          },
          {
            internalType: 'uint128',
            name: 'softUpperLimit',
            type: 'uint128',
          },
        ],
        internalType: 'struct DataTypes.ReserveData',
        name: '',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [] as any,
    name: 'getReserveNormalizedIncome',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'user',
        type: 'address',
      },
    ],
    name: 'getUserExpirationTimestamp',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [] as any,
    name: 'getWhitelistExpiration',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'oToken',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'fundAddress',
        type: 'address',
      },
    ],
    name: 'initReserve',
    outputs: [] as any,
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IVaultAddressesProvider',
        name: 'provider',
        type: 'address',
      },
    ],
    name: 'initialize',
    outputs: [] as any,
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint16',
        name: 'managementFeeRate',
        type: 'uint16',
      },
      {
        internalType: 'uint16',
        name: 'performanceFeeRate',
        type: 'uint16',
      },
      {
        internalType: 'uint128',
        name: 'purchaseUpperLimit',
        type: 'uint128',
      },
      {
        internalType: 'uint128',
        name: 'softUpperLimit',
        type: 'uint128',
      },
      {
        internalType: 'uint40',
        name: 'purchaseBeginTimestamp',
        type: 'uint40',
      },
      {
        internalType: 'uint40',
        name: 'purchaseEndTimestamp',
        type: 'uint40',
      },
      {
        internalType: 'uint40',
        name: 'redemptionBeginTimestamp',
        type: 'uint40',
      },
    ],
    name: 'initializeNextPeriod',
    outputs: [] as any,
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'user',
        type: 'address',
      },
    ],
    name: 'isInWhitelist',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint40',
        name: 'newPurchaseEndTimestamp',
        type: 'uint40',
      },
    ],
    name: 'moveTheLockPeriod',
    outputs: [] as any,
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint40',
        name: 'newRedemptionBeginTimestamp',
        type: 'uint40',
      },
    ],
    name: 'moveTheRedemptionPeriod',
    outputs: [] as any,
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [] as any,
    name: 'paused',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'user',
        type: 'address',
      },
    ],
    name: 'removeFromWhitelist',
    outputs: [] as any,
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'configuration',
        type: 'uint256',
      },
    ],
    name: 'setConfiguration',
    outputs: [] as any,
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'fundAddress',
        type: 'address',
      },
    ],
    name: 'setFuncAddress',
    outputs: [] as any,
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bool',
        name: 'val',
        type: 'bool',
      },
    ],
    name: 'setPause',
    outputs: [] as any,
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'expiration',
        type: 'uint256',
      },
    ],
    name: 'setWhitelistExpiration',
    outputs: [] as any,
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'netValue',
        type: 'uint256',
      },
    ],
    name: 'updateNetValue',
    outputs: [] as any,
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
    ],
    name: 'withdraw',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'withdrawFund',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
]

const _bytecode =
  '0x60806040526000805534801561001457600080fd5b50603480546001600160a01b031916905561339c806100346000396000f3fe608060405234801561001057600080fd5b50600436106101a85760003560e01c806375d002f4116100f9578063bedb86fb11610097578063c6d04d8611610071578063c6d04d86146104fd578063ce73a61d14610505578063e43252d714610518578063fe65acfe1461052b57600080fd5b8063bedb86fb146104c4578063c0342dc8146104d7578063c4d66de8146104ea57600080fd5b80638e589df7116100d35780638e589df71461048357806396c2614c146104965780639b8d6d381461049e578063be131c39146104b157600080fd5b806375d002f414610455578063866013721461045d5780638ab1d6811461047057600080fd5b806320086d9b11610166578063585e5d2011610140578063585e5d20146103fb5780635c975abb1461040e5780636bd50cef146104195780636c3fbb801461044257600080fd5b806320086d9b146103ac5780632db6fa36146103bf57806340585638146103d257600080fd5b8062f714ce146101ad578063045fb888146101d357806305bef05e146101e857806309fd82121461034b5780630ad40df1146103865780630cee172514610399575b600080fd5b6101c06101bb366004612d6c565b610546565b6040519081526020015b60405180910390f35b6101e66101e1366004612d9c565b61087b565b005b61033e604080516101e08101825260006101c08201818152825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e08101829052610100810182905261012081018290526101408101829052610160810182905261018081018290526101a081019190915250604080516101e0810182526035546101c0820190815281526036546001600160801b038082166020840152600160801b91829004600f0b938301939093526037548084166060840152048216608082015260385464ffffffffff80821660a0840152600160281b8204811660c0840152600160501b8204811660e0840152600160781b82041661010083015261ffff600160a01b82048116610120840152600160b01b909104166101408201526039546001600160a01b03908116610160830152603a5416610180820152603b549091166101a082015290565b6040516101ca9190612e11565b610376610359366004612f42565b6001600160a01b03166000908152603e6020526040902054421090565b60405190151581526020016101ca565b6101e6610394366004612f5f565b6109fe565b6101c06103a7366004612f5f565b610ac3565b6101e66103ba366004612f8d565b610e47565b6101e66103cd366004612d9c565b610fae565b6101c06103e0366004612f42565b6001600160a01b03166000908152603e602052604090205490565b6101e6610409366004612f5f565b61114b565b603c5460ff16610376565b6040805160208082018352600090915281518082018352603554908190529151918252016101ca565b6101e6610450366004612fa8565b611315565b6101c0600981565b6101e661046b366004612f5f565b611453565b6101e661047e366004612f42565b61182e565b6101e6610491366004612fff565b611932565b6101c0611c89565b6101c06104ac366004613085565b611c9a565b6101e66104bf366004612f42565b61209e565b6101e66104d23660046130d1565b6121e9565b6101e66104e5366004612f8d565b61231b565b6101e66104f8366004612f42565b61249a565b603d546101c0565b6101e6610513366004612f5f565b61256b565b6101e6610526366004612f42565b612666565b6034546040516001600160a01b0390911681526020016101ca565b603c546040805180820190915260028152610d8d60f21b602082015260009160ff161561058f5760405162461bcd60e51b815260040161058691906130ee565b60405180910390fd5b50336000908152603e602090815260409182902054825180840190935260028352611b1b60f11b9183019190915242106105dc5760405162461bcd60e51b815260040161058691906130ee565b506039546040516370a0823160e01b81523360048201526001600160a01b039091169060009082906370a082319060240160206040518083038186803b15801561062557600080fd5b505afa158015610639573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061065d9190613143565b90508460001981141561066d5750805b6040805180820190915260018152603160f81b60208201524290876106a55760405162461bcd60e51b815260040161058691906130ee565b506040805180820190915260018152603560f81b6020820152838811156106df5760405162461bcd60e51b815260040161058691906130ee565b5060385464ffffffffff600160281b909104811690821610801590610735575060385464ffffffffff600160501b90910481169082161080610735575060385464ffffffffff600160781b909104811690821610155b604051806040016040528060018152602001603760f81b8152509061076d5760405162461bcd60e51b815260040161058691906130ee565b506035546040805180820190915260018152601960f91b6020820152610100909116151590816107b05760405162461bcd60e51b815260040161058691906130ee565b50603654604051636b81068560e11b81523360048201526001600160a01b038981166024830152604482018690526001600160801b0390921660648201529086169063d7020d0a90608401600060405180830381600087803b15801561081557600080fd5b505af1158015610829573d6000803e3d6000fd5b50506040518581526001600160a01b038a1692503391507f9b1bfa7fa9ee420a16e124f794c35ac9f90472acc99140eb2f6447c714cad8eb9060200160405180910390a3509093505050505b92915050565b6034546040805163d759932b60e01b8152905133926001600160a01b03169163d759932b916004808301926020929190829003018186803b1580156108bf57600080fd5b505afa1580156108d3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108f7919061315c565b6001600160a01b03161460405180604001604052806002815260200161323760f01b8152509061093a5760405162461bcd60e51b815260040161058691906130ee565b5060005b818110156109f9576000603e600085858581811061095e5761095e613179565b90506020020160208101906109739190612f42565b6001600160a01b0316815260208101919091526040016000205582828281811061099f5761099f613179565b90506020020160208101906109b49190612f42565b6001600160a01b03167f1f756c8b089af6b33ee121fee8badac2553a2fa89c0575ea91ff8792617746c260405160405180910390a26109f2816131a5565b905061093e565b505050565b6034546040805163d759932b60e01b8152905133926001600160a01b03169163d759932b916004808301926020929190829003018186803b158015610a4257600080fd5b505afa158015610a56573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a7a919061315c565b6001600160a01b03161460405180604001604052806002815260200161323760f01b81525090610abd5760405162461bcd60e51b815260040161058691906130ee565b50603555565b603c546040805180820190915260028152610d8d60f21b602082015260009160ff1615610b035760405162461bcd60e51b815260040161058691906130ee565b5060345460408051631ba0ae4560e01b8152905133926001600160a01b031691631ba0ae45916004808301926020929190829003018186803b158015610b4857600080fd5b505afa158015610b5c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b80919061315c565b6001600160a01b03161460405180604001604052806002815260200161333360f01b81525090610bc35760405162461bcd60e51b815260040161058691906130ee565b506040805180820190915260018152603160f81b6020820152429083610bfc5760405162461bcd60e51b815260040161058691906130ee565b50603854600160501b900464ffffffffff168110801590610c2c5750603854600160781b900464ffffffffff1681105b604051806040016040528060018152602001603960f81b81525090610c645760405162461bcd60e51b815260040161058691906130ee565b50603954604080516358b50cef60e11b8152905185926001600160a01b0316918291600091839163b16a19de91600481810192602092909190829003018186803b158015610cb157600080fd5b505afa158015610cc5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ce9919061315c565b9050600019871415610d71576040516370a0823160e01b81526001600160a01b0384811660048301528216906370a082319060240160206040518083038186803b158015610d3657600080fd5b505afa158015610d4a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d6e9190613143565b93505b603a54604051634efecaa560e01b81526001600160a01b0391821660048201526024810186905290831690634efecaa590604401602060405180830381600087803b158015610dbf57600080fd5b505af1158015610dd3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610df79190613143565b50603a546040518581526001600160a01b03909116907fdcbc04a15249e560179846f4ed762c63956382a0d6e4972fa2b4939a184613ca9060200160405180910390a2509193505050505b919050565b6034546040805163d759932b60e01b8152905133926001600160a01b03169163d759932b916004808301926020929190829003018186803b158015610e8b57600080fd5b505afa158015610e9f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ec3919061315c565b6001600160a01b03161460405180604001604052806002815260200161323760f01b81525090610f065760405162461bcd60e51b815260040161058691906130ee565b5060385464ffffffffff600160501b909104811690821611610f2757600080fd5b4264ffffffffff168164ffffffffff161015610f4257600080fd5b6038805464ffffffffff838116600160781b81810264ffffffffff60781b1985161790945560408051949093049091168084526020840191909152917fe4c41315b69a185c0a470f338694a4c8006faecac42081b6a7978c4a5c70fa6891015b60405180910390a15050565b6034546040805163d759932b60e01b8152905133926001600160a01b03169163d759932b916004808301926020929190829003018186803b158015610ff257600080fd5b505afa158015611006573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061102a919061315c565b6001600160a01b03161460405180604001604052806002815260200161323760f01b8152509061106d5760405162461bcd60e51b815260040161058691906130ee565b5060005b818110156109f9576000603d544261108991906131c0565b905080603e60008686868181106110a2576110a2613179565b90506020020160208101906110b79190612f42565b6001600160a01b031681526020810191909152604001600020558383838181106110e3576110e3613179565b90506020020160208101906110f89190612f42565b6001600160a01b03167f62c1e066774519db9fe35767c15fc33df2f016675b7cc0c330ed185f286a2d528260405161113291815260200190565b60405180910390a250611144816131a5565b9050611071565b60345460408051631ba0ae4560e01b8152905133926001600160a01b031691631ba0ae45916004808301926020929190829003018186803b15801561118f57600080fd5b505afa1580156111a3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111c7919061315c565b6001600160a01b03161460405180604001604052806002815260200161333360f01b8152509061120a5760405162461bcd60e51b815260040161058691906130ee565b506040805180820190915260018152603160f81b6020820152816112415760405162461bcd60e51b815260040161058691906130ee565b50603954604080516358b50cef60e11b815290516001600160a01b0390921691600091839163b16a19de91600481810192602092909190829003018186803b15801561128c57600080fd5b505afa1580156112a0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112c4919061315c565b90506112db6001600160a01b038216338486612793565b60405183815233907f04d1e3db499c88d526b5839da3d76fbdda6fd7310b9aa71a624f2002ef73f95f9060200160405180910390a2505050565b6034546040805163d759932b60e01b8152905133926001600160a01b03169163d759932b916004808301926020929190829003018186803b15801561135957600080fd5b505afa15801561136d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611391919061315c565b6001600160a01b03161460405180604001604052806002815260200161323760f01b815250906113d45760405162461bcd60e51b815260040161058691906130ee565b5060405163220e4eef60e21b8152603560048201526001600160a01b0380841660248301528216604482015273__$d3b4366daeb9cadc7528af6145b50b2183$__906388393bbc9060640160006040518083038186803b15801561143757600080fd5b505af415801561144b573d6000803e3d6000fd5b505050505050565b60345460408051630354b3c760e11b8152905133926001600160a01b0316916306a9678e916004808301926020929190829003018186803b15801561149757600080fd5b505afa1580156114ab573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114cf919061315c565b6001600160a01b03161480611566575060345460408051631ba0ae4560e01b8152905133926001600160a01b031691631ba0ae45916004808301926020929190829003018186803b15801561152357600080fd5b505afa158015611537573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061155b919061315c565b6001600160a01b0316145b60405180604001604052806002815260200161064760f31b8152509061159f5760405162461bcd60e51b815260040161058691906130ee565b506040805180820190915260018152603160f81b6020820152816115d65760405162461bcd60e51b815260040161058691906130ee565b50603854429064ffffffffff600160501b909104811690821610801590611610575060385464ffffffffff600160781b9091048116908216105b604051806040016040528060018152602001603960f81b815250906116485760405162461bcd60e51b815260040161058691906130ee565b506039546040805163b1bf962d60e01b815290516001600160a01b0390921691600091839163b1bf962d91600481810192602092909190829003018186803b15801561169357600080fd5b505afa1580156116a7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116cb9190613143565b90506000826001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b15801561170857600080fd5b505afa15801561171c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117409190613143565b905061174f6035868487612835565b7fdf9cc56642031d66906385d61d96c81f52e6ed903d39629da900bf8b67e884e381846001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b1580156117aa57600080fd5b505afa1580156117be573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117e29190613143565b6037546036546040805194855260208501939093526001600160801b03918216848401529081166060840152600160801b9004600f0b6080830152519081900360a00190a15050505050565b6034546040805163d759932b60e01b8152905133926001600160a01b03169163d759932b916004808301926020929190829003018186803b15801561187257600080fd5b505afa158015611886573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118aa919061315c565b6001600160a01b03161460405180604001604052806002815260200161323760f01b815250906118ed5760405162461bcd60e51b815260040161058691906130ee565b506001600160a01b0381166000818152603e6020526040808220829055517f1f756c8b089af6b33ee121fee8badac2553a2fa89c0575ea91ff8792617746c29190a250565b6034546040805163d759932b60e01b8152905133926001600160a01b03169163d759932b916004808301926020929190829003018186803b15801561197657600080fd5b505afa15801561198a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119ae919061315c565b6001600160a01b03161460405180604001604052806002815260200161323760f01b815250906119f15760405162461bcd60e51b815260040161058691906130ee565b50603854604080518082019091526002815261031360f41b60208201529064ffffffffff600160781b9091048116429091161015611a425760405162461bcd60e51b815260040161058691906130ee565b5060385464ffffffffff600160781b909104811690841610801590611a7457508164ffffffffff168364ffffffffff16105b8015611a8d57508064ffffffffff168264ffffffffff16105b60405180604001604052806002815260200161313160f01b81525090611ac65760405162461bcd60e51b815260040161058691906130ee565b506038805461ffff888116600160b01b0261ffff60b01b19918b16600160a01b029190911663ffffffff60a01b1990921691909117179055603780546001600160801b03808816600160801b029116179055611b2260356129d0565b603780546001600160801b03929092166001600160801b0319928316811790915560368054909216179055611b6d611b636b033b2e3c9fd0803ce800000090565b8861ffff16612a9c565b611b76906131d8565b603680546001600160801b03908116600160801b93821693909302929092179055603880546effffffffffffffffffff00000000001916600160281b64ffffffffff87811691820264ffffffffff60501b191692909217600160501b8784169081029190911773ffffffffff00000000000000000000ffffffffff1916600160781b93871693840264ffffffffff1916178117909355603b80546001600160801b03191689861617905560375460408051919095168152602081019190915292830191909152606082015261ffff8089166080830152871660a08201527f690b9d63be57b307a8560c124fdcdada8871409db42c5f79fb205a8b93e5e61b9060c00160405180910390a150505050505050565b6000611c9560356129d0565b905090565b603c546040805180820190915260028152610d8d60f21b602082015260009160ff1615611cda5760405162461bcd60e51b815260040161058691906130ee565b506040805180820190915260018152603160f81b602082015284611d115760405162461bcd60e51b815260040161058691906130ee565b50336000908152603e602090815260409182902054825180840190935260028352611b1b60f11b918301919091524291908210611d615760405162461bcd60e51b815260040161058691906130ee565b50603554603854610100821615159161020016151590600160281b900464ffffffffff90811690841610801590611dc9575060385464ffffffffff600160501b90910481169084161080611dc9575060385464ffffffffff600160781b909104811690841610155b604051806040016040528060018152602001603760f81b81525090611e015760405162461bcd60e51b815260040161058691906130ee565b506040805180820190915260018152601960f91b602082015282611e385760405162461bcd60e51b815260040161058691906130ee565b506040805180820190915260018152603360f81b60208201528115611e705760405162461bcd60e51b815260040161058691906130ee565b50603954604080516318160ddd60e01b815290516001600160a01b0390921691829160009183916318160ddd916004828101926020929190829003018186803b158015611ebc57600080fd5b505afa158015611ed0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ef49190613143565b603754611f119190600160801b90046001600160801b03166131f5565b9050808a1115611f1f578099505b603654604051630ab714fb60e11b81526001600160a01b038b81166004830152602482018d90526001600160801b0390921660448201529083169063156e29f690606401602060405180830381600087803b158015611f7d57600080fd5b505af1158015611f91573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611fb5919061320c565b5061203e33848c856001600160a01b031663b16a19de6040518163ffffffff1660e01b815260040160206040518083038186803b158015611ff557600080fd5b505afa158015612009573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061202d919061315c565b6001600160a01b0316929190612793565b8761ffff16896001600160a01b0316336001600160a01b03167fc4bd2b15fc4073a16fbcbebdea7175494cd3c2dc36a5c53da23f3db6bde868aa8d60405161208891815260200190565b60405180910390a4509798975050505050505050565b6034546040805163d759932b60e01b8152905133926001600160a01b03169163d759932b916004808301926020929190829003018186803b1580156120e257600080fd5b505afa1580156120f6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061211a919061315c565b6001600160a01b03161460405180604001604052806002815260200161323760f01b8152509061215d5760405162461bcd60e51b815260040161058691906130ee565b50604080518082019091526002815261034360f41b60208201526001600160a01b03821661219e5760405162461bcd60e51b815260040161058691906130ee565b50603a80546001600160a01b0319166001600160a01b0383169081179091556040517f6bed6474711943f2d27e5ea867d18cf848a8dab37cc30943bc20c38b12494ab490600090a250565b6034546040805163d759932b60e01b8152905133926001600160a01b03169163d759932b916004808301926020929190829003018186803b15801561222d57600080fd5b505afa158015612241573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612265919061315c565b6001600160a01b03161460405180604001604052806002815260200161323760f01b815250906122a85760405162461bcd60e51b815260040161058691906130ee565b50603c805460ff191682151590811790915560ff16156122ee576040517f9e87fac88ff661f02d44f95383c817fece4bce600a3dab7a54406878b965e75290600090a150565b6040517fa45f47fdea8a1efdd9029a5691c7f759c32b7c698632b563573e155625d1693390600090a15b50565b6034546040805163d759932b60e01b8152905133926001600160a01b03169163d759932b916004808301926020929190829003018186803b15801561235f57600080fd5b505afa158015612373573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612397919061315c565b6001600160a01b03161460405180604001604052806002815260200161323760f01b815250906123da5760405162461bcd60e51b815260040161058691906130ee565b5060385464ffffffffff600160501b9091048116908216106123fb57600080fd5b60385464ffffffffff600160281b90910481169082161161241b57600080fd5b4264ffffffffff168164ffffffffff16101561243657600080fd5b6038805464ffffffffff838116600160501b81810264ffffffffff60501b1985161790945560408051949093049091168084526020840191909152917fd70f9ec33fb358b9b35ba27c3022b8f100dea4e0f0cdf87b66de3cfd7f08cc429101610fa2565b60015460099060ff16806124ad5750303b155b806124b9575060005481115b61251c5760405162461bcd60e51b815260206004820152602e60248201527f436f6e747261637420696e7374616e63652068617320616c726561647920626560448201526d195b881a5b9a5d1a585b1a5e995960921b6064820152608401610586565b60015460ff1615801561253b576001805460ff19168117905560008290555b603480546001600160a01b0319166001600160a01b03851617905580156109f9576001805460ff19169055505050565b6034546040805163d759932b60e01b8152905133926001600160a01b03169163d759932b916004808301926020929190829003018186803b1580156125af57600080fd5b505afa1580156125c3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906125e7919061315c565b6001600160a01b03161460405180604001604052806002815260200161323760f01b8152509061262a5760405162461bcd60e51b815260040161058691906130ee565b50603d8190556040518181527f0e036d270c02057c1efc67a26e42d8b96aeada233e8ef6ff0c9d481cf7fb72929060200160405180910390a150565b6034546040805163d759932b60e01b8152905133926001600160a01b03169163d759932b916004808301926020929190829003018186803b1580156126aa57600080fd5b505afa1580156126be573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906126e2919061315c565b6001600160a01b03161460405180604001604052806002815260200161323760f01b815250906127255760405162461bcd60e51b815260040161058691906130ee565b506000603d544261273691906131c0565b6001600160a01b0383166000818152603e60205260409081902083905551919250907f62c1e066774519db9fe35767c15fc33df2f016675b7cc0c330ed185f286a2d52906127879084815260200190565b60405180910390a25050565b6040516323b872dd60e01b8082526001600160a01b038581166004840152841660248301526044820183905290600080606483828a5af16127d8573d6000803e3d6000fd5b506127e285612ae9565b61282e5760405162461bcd60e51b815260206004820152601960248201527f475076323a206661696c6564207472616e7366657246726f6d000000000000006044820152606401610586565b5050505050565b600384015460009061285590600160501b900464ffffffffff16836131f5565b600286015490915060009081906001600160801b031681818811156128d957612896612881838a6131f5565b60038b0154600160b01b900461ffff16612a9c565b60038a01549093506128b4908990600160a01b900461ffff16612a9c565b60038a01549094506128d2908990600160a01b900461ffff16613229565b9050612915565b60038901546128f4908390600160a01b900461ffff16612a9c565b60038a0154909450612912908390600160a01b900461ffff16613229565b90505b6000836301e133806129278888613229565b612931919061325e565b61293b908b6131f5565b61294591906131f5565b90506127106129548383612b92565b61295e919061325e565b60018b0180546001600160801b0319166001600160801b0384161790559150612986826131d8565b60018b0180546001600160801b03928316600160801b0292169190911790555050506003909601805464ffffffffff90941664ffffffffff19909416939093179092555050505050565b600381015460009064ffffffffff808216914291600160501b909104811690821611612a0957505050600101546001600160801b031690565b600384015464ffffffffff600160781b90910481169082161115612a3c57506003830154600160781b900464ffffffffff165b8164ffffffffff168164ffffffffff161115612a89576001840154612a81906001600160801b03811690612a7b90600160801b9004600f0b8486612c68565b90612cba565b949350505050565b505050600101546001600160801b031690565b6000821580612aa9575081155b15612ab657506000610875565b612710612ac460028261325e565b612ace8486613229565b612ad891906131c0565b612ae2919061325e565b9392505050565b6000612b0f565b62461bcd60e51b60005260206004528060245250806044525060646000fd5b3d8015612b4e5760208114612b7f57612b497f475076323a206d616c666f726d6564207472616e7366657220726573756c7400601f612af0565b612b8c565b823b612b7657612b767311d41d8c8e881b9bdd08184818dbdb9d1c9858dd60621b6014612af0565b60019150612b8c565b3d6000803e600051151591505b50919050565b604080518082019091526002815261035360f41b602082015260009082612bcc5760405162461bcd60e51b815260040161058691906130ee565b506000612bda60028461325e565b90506b033b2e3c9fd0803ce8000000612bf5826000196131f5565b612bff919061325e565b84111560405180604001604052806002815260200161068760f31b81525090612c3b5760405162461bcd60e51b815260040161058691906130ee565b508281612c546b033b2e3c9fd0803ce800000087613229565b612c5e91906131c0565b612a81919061325e565b600080612c7f64ffffffffff8085169086166131f5565b90506b033b2e3c9fd0803ce80000006301e13380612c9d8388613272565b612ca791906132f7565b612cb19190613325565b95945050505050565b6000821580612cc7575081155b15612cd457506000610875565b81612cec60026b033b2e3c9fd0803ce800000061325e565b612cf8906000196131f5565b612d02919061325e565b83111560405180604001604052806002815260200161068760f31b81525090612d3e5760405162461bcd60e51b815260040161058691906130ee565b506b033b2e3c9fd0803ce8000000612ac460028261325e565b6001600160a01b038116811461231857600080fd5b60008060408385031215612d7f57600080fd5b823591506020830135612d9181612d57565b809150509250929050565b60008060208385031215612daf57600080fd5b823567ffffffffffffffff80821115612dc757600080fd5b818501915085601f830112612ddb57600080fd5b813581811115612dea57600080fd5b8660208260051b8501011115612dff57600080fd5b60209290920196919550909350505050565b81515181526101c081016020830151612e3560208401826001600160801b03169052565b506040830151612e4a6040840182600f0b9052565b506060830151612e6560608401826001600160801b03169052565b506080830151612e8060808401826001600160801b03169052565b5060a0830151612e9960a084018264ffffffffff169052565b5060c0830151612eb260c084018264ffffffffff169052565b5060e0830151612ecb60e084018264ffffffffff169052565b506101008381015164ffffffffff16908301526101208084015161ffff908116918401919091526101408085015190911690830152610160808401516001600160a01b039081169184019190915261018080850151909116908301526101a0928301516001600160801b0316929091019190915290565b600060208284031215612f5457600080fd5b8135612ae281612d57565b600060208284031215612f7157600080fd5b5035919050565b803564ffffffffff81168114610e4257600080fd5b600060208284031215612f9f57600080fd5b612ae282612f78565b60008060408385031215612fbb57600080fd5b8235612fc681612d57565b91506020830135612d9181612d57565b803561ffff81168114610e4257600080fd5b80356001600160801b0381168114610e4257600080fd5b600080600080600080600060e0888a03121561301a57600080fd5b61302388612fd6565b965061303160208901612fd6565b955061303f60408901612fe8565b945061304d60608901612fe8565b935061305b60808901612f78565b925061306960a08901612f78565b915061307760c08901612f78565b905092959891949750929550565b60008060006060848603121561309a57600080fd5b8335925060208401356130ac81612d57565b91506130ba60408501612fd6565b90509250925092565b801515811461231857600080fd5b6000602082840312156130e357600080fd5b8135612ae2816130c3565b600060208083528351808285015260005b8181101561311b578581018301518582016040015282016130ff565b8181111561312d576000604083870101525b50601f01601f1916929092016040019392505050565b60006020828403121561315557600080fd5b5051919050565b60006020828403121561316e57600080fd5b8151612ae281612d57565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60006000198214156131b9576131b961318f565b5060010190565b600082198211156131d3576131d361318f565b500190565b6000600160ff1b8214156131ee576131ee61318f565b5060000390565b6000828210156132075761320761318f565b500390565b60006020828403121561321e57600080fd5b8151612ae2816130c3565b60008160001904831182151516156132435761324361318f565b500290565b634e487b7160e01b600052601260045260246000fd5b60008261326d5761326d613248565b500490565b60006001600160ff1b03818413828413808216868404861116156132985761329861318f565b600160ff1b60008712828116878305891216156132b7576132b761318f565b600087129250878205871284841616156132d3576132d361318f565b878505871281841616156132e9576132e961318f565b505050929093029392505050565b60008261330657613306613248565b600160ff1b8214600019841416156133205761332061318f565b500590565b600080821280156001600160ff1b03849003851316156133475761334761318f565b600160ff1b83900384128116156133605761336061318f565b5050019056fea2646970667358221220815c7e398f3561ae9426ab67ce4fb465a7470fd67bd40927beebd6e48a0bd43964736f6c63430008090033'

type VaultConstructorParams =
  | [linkLibraryAddresses: VaultLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>

const isSuperArgs = (xs: VaultConstructorParams): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === 'string' ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    '_isInterface' in xs[0]
  )
}

export class Vault__factory extends ContractFactory {
  constructor(...args: VaultConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args)
    } else {
      const [linkLibraryAddresses, signer] = args
      super(_abi, Vault__factory.linkBytecode(linkLibraryAddresses), signer)
    }
  }

  static linkBytecode(linkLibraryAddresses: VaultLibraryAddresses): string {
    let linkedBytecode = _bytecode

    linkedBytecode = linkedBytecode.replace(
      new RegExp('__\\$d3b4366daeb9cadc7528af6145b50b2183\\$__', 'g'),
      linkLibraryAddresses['contracts/libraries/logic/ReserveLogic.sol:ReserveLogic'].replace(/^0x/, '').toLowerCase()
    )

    return linkedBytecode
  }

  override deploy(overrides?: Overrides & { from?: PromiseOrValue<string> }): Promise<Vault> {
    return super.deploy(overrides || {}) as Promise<Vault>
  }
  override getDeployTransaction(overrides?: Overrides & { from?: PromiseOrValue<string> }): TransactionRequest {
    return super.getDeployTransaction(overrides || {})
  }
  override attach(address: string): Vault {
    return super.attach(address) as Vault
  }
  override connect(signer: Signer): Vault__factory {
    return super.connect(signer) as Vault__factory
  }

  static readonly bytecode = _bytecode
  static readonly abi = _abi
  static createInterface(): VaultInterface {
    return new utils.Interface(_abi) as VaultInterface
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Vault {
    return new Contract(address, _abi, signerOrProvider) as Vault
  }
}

export interface VaultLibraryAddresses {
  ['contracts/libraries/logic/ReserveLogic.sol:ReserveLogic']: string
}
