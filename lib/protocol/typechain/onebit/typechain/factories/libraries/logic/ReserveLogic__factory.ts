/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers'
import type { Provider, TransactionRequest } from '@ethersproject/providers'
import type { PromiseOrValue } from '../../../common'
import type { ReserveLogic, ReserveLogicInterface } from '../../../libraries/logic/ReserveLogic'

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'asset',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'liquidityRate',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'liquidityIndex',
        type: 'uint256',
      },
    ],
    name: 'ReserveDataUpdated',
    type: 'event',
  },
]

const _bytecode =
  '0x6101ec61003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100355760003560e01c806388393bbc1461003a575b600080fd5b81801561004657600080fd5b5061005a610055366004610125565b61005c565b005b6004830154604080518082019091526002815261199960f11b6020820152906001600160a01b0316156100ab5760405162461bcd60e51b81526004016100a29190610161565b60405180910390fd5b506001830180546b033b2e3c9fd0803ce80000006fffffffffffffffffffffffffffffffff199091161790556004830180546001600160a01b03199081166001600160a01b0394851617909155600590930180549093169116179055565b80356001600160a01b038116811461012057600080fd5b919050565b60008060006060848603121561013a57600080fd5b8335925061014a60208501610109565b915061015860408501610109565b90509250925092565b600060208083528351808285015260005b8181101561018e57858101830151858201604001528201610172565b818111156101a0576000604083870101525b50601f01601f191692909201604001939250505056fea264697066735822122022f833f5485a45a16cfde31e5d2e70f2833c4b491429d1143cca4cc6995b967464736f6c63430008090033'

type ReserveLogicConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>

const isSuperArgs = (xs: ReserveLogicConstructorParams): xs is ConstructorParameters<typeof ContractFactory> =>
  xs.length > 1

export class ReserveLogic__factory extends ContractFactory {
  constructor(...args: ReserveLogicConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args)
    } else {
      super(_abi, _bytecode, args[0])
    }
  }

  override deploy(overrides?: Overrides & { from?: PromiseOrValue<string> }): Promise<ReserveLogic> {
    return super.deploy(overrides || {}) as Promise<ReserveLogic>
  }
  override getDeployTransaction(overrides?: Overrides & { from?: PromiseOrValue<string> }): TransactionRequest {
    return super.getDeployTransaction(overrides || {})
  }
  override attach(address: string): ReserveLogic {
    return super.attach(address) as ReserveLogic
  }
  override connect(signer: Signer): ReserveLogic__factory {
    return super.connect(signer) as ReserveLogic__factory
  }

  static readonly bytecode = _bytecode
  static readonly abi = _abi
  static createInterface(): ReserveLogicInterface {
    return new utils.Interface(_abi) as ReserveLogicInterface
  }
  static connect(address: string, signerOrProvider: Signer | Provider): ReserveLogic {
    return new Contract(address, _abi, signerOrProvider) as ReserveLogic
  }
}
