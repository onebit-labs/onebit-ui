/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from 'ethers'
import type { Provider } from '@ethersproject/providers'
import type { ILendingPool, ILendingPoolInterface } from '../../interfaces/ILendingPool'

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'user',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'onBehalfOf',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
      {
        indexed: true,
        internalType: 'uint16',
        name: 'referral',
        type: 'uint16',
      },
    ],
    name: 'Deposit',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'newFundAddress',
        type: 'address',
      },
    ],
    name: 'FundAddressUpdated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'FundDeposit',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'FundWithdraw',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint256',
        name: 'previousNetValue',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'newNetValue',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'previousLiquidityIndex',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'newLiquidityIndex',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'int256',
        name: 'currentLiquidityRate',
        type: 'int256',
      },
    ],
    name: 'NetValueUpdated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [] as any,
    name: 'Paused',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint256',
        name: 'previousLiquidityIndex',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint40',
        name: 'purchaseBeginTimestamp',
        type: 'uint40',
      },
      {
        indexed: false,
        internalType: 'uint40',
        name: 'purchaseEndTimestamp',
        type: 'uint40',
      },
      {
        indexed: false,
        internalType: 'uint40',
        name: 'redemptionBeginTimestamp',
        type: 'uint40',
      },
      {
        indexed: false,
        internalType: 'uint16',
        name: 'managementFeeRate',
        type: 'uint16',
      },
      {
        indexed: false,
        internalType: 'uint16',
        name: 'performanceFeeRate',
        type: 'uint16',
      },
    ],
    name: 'PeriodInitialized',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint40',
        name: 'previousTimestamp',
        type: 'uint40',
      },
      {
        indexed: false,
        internalType: 'uint40',
        name: 'newTimetamp',
        type: 'uint40',
      },
    ],
    name: 'PurchaseEndTimestampMoved',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint40',
        name: 'previousTimestamp',
        type: 'uint40',
      },
      {
        indexed: false,
        internalType: 'uint40',
        name: 'newTimetamp',
        type: 'uint40',
      },
    ],
    name: 'RedemptionBeginTimestampMoved',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [] as any,
    name: 'Unpaused',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'user',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'Withdraw',
    type: 'event',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
      {
        internalType: 'address',
        name: 'onBehalfOf',
        type: 'address',
      },
      {
        internalType: 'uint16',
        name: 'referralCode',
        type: 'uint16',
      },
    ],
    name: 'deposit',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'depositFund',
    outputs: [] as any,
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [] as any,
    name: 'getAddressesProvider',
    outputs: [
      {
        internalType: 'contract ILendingPoolAddressesProvider',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [] as any,
    name: 'getConfiguration',
    outputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'data',
            type: 'uint256',
          },
        ],
        internalType: 'struct DataTypes.ReserveConfigurationMap',
        name: '',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [] as any,
    name: 'getReserveData',
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: 'uint256',
                name: 'data',
                type: 'uint256',
              },
            ],
            internalType: 'struct DataTypes.ReserveConfigurationMap',
            name: 'configuration',
            type: 'tuple',
          },
          {
            internalType: 'uint128',
            name: 'liquidityIndex',
            type: 'uint128',
          },
          {
            internalType: 'int128',
            name: 'currentLiquidityRate',
            type: 'int128',
          },
          {
            internalType: 'uint128',
            name: 'previousLiquidityIndex',
            type: 'uint128',
          },
          {
            internalType: 'uint128',
            name: 'purchaseUpperLimit',
            type: 'uint128',
          },
          {
            internalType: 'uint40',
            name: 'lastUpdateTimestamp',
            type: 'uint40',
          },
          {
            internalType: 'uint40',
            name: 'purchaseBeginTimestamp',
            type: 'uint40',
          },
          {
            internalType: 'uint40',
            name: 'purchaseEndTimestamp',
            type: 'uint40',
          },
          {
            internalType: 'uint40',
            name: 'redemptionBeginTimestamp',
            type: 'uint40',
          },
          {
            internalType: 'uint16',
            name: 'managementFeeRate',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'performanceFeeRate',
            type: 'uint16',
          },
          {
            internalType: 'address',
            name: 'oTokenAddress',
            type: 'address',
          },
          {
            internalType: 'address',
            name: 'fundAddress',
            type: 'address',
          },
          {
            internalType: 'uint128',
            name: 'softUpperLimit',
            type: 'uint128',
          },
        ],
        internalType: 'struct DataTypes.ReserveData',
        name: '',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [] as any,
    name: 'getReserveNormalizedIncome',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'oToken',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'fundAddress',
        type: 'address',
      },
    ],
    name: 'initReserve',
    outputs: [] as any,
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [] as any,
    name: 'paused',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'configuration',
        type: 'uint256',
      },
    ],
    name: 'setConfiguration',
    outputs: [] as any,
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bool',
        name: 'val',
        type: 'bool',
      },
    ],
    name: 'setPause',
    outputs: [] as any,
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'fundAddress',
        type: 'address',
      },
    ],
    name: 'updateFuncAddress',
    outputs: [] as any,
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
    ],
    name: 'withdraw',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'withdrawFund',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
]

export class ILendingPool__factory {
  static readonly abi = _abi
  static createInterface(): ILendingPoolInterface {
    return new utils.Interface(_abi) as ILendingPoolInterface
  }
  static connect(address: string, signerOrProvider: Signer | Provider): ILendingPool {
    return new Contract(address, _abi, signerOrProvider) as ILendingPool
  }
}
