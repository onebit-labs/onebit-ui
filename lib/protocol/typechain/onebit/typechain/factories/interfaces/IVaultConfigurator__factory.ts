/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from 'ethers'
import type { Provider } from '@ethersproject/providers'
import type { IVaultConfigurator, IVaultConfiguratorInterface } from '../../interfaces/IVaultConfigurator'

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'proxy',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'implementation',
        type: 'address',
      },
    ],
    name: 'OTokenUpgraded',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [] as any,
    name: 'ReserveActivated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [] as any,
    name: 'ReserveDeactivated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'asset',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'decimals',
        type: 'uint256',
      },
    ],
    name: 'ReserveDecimalsChanged',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [] as any,
    name: 'ReserveFrozen',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'asset',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'oToken',
        type: 'address',
      },
    ],
    name: 'ReserveInitialized',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [] as any,
    name: 'ReserveUnfrozen',
    type: 'event',
  },
]

export class IVaultConfigurator__factory {
  static readonly abi = _abi
  static createInterface(): IVaultConfiguratorInterface {
    return new utils.Interface(_abi) as IVaultConfiguratorInterface
  }
  static connect(address: string, signerOrProvider: Signer | Provider): IVaultConfigurator {
    return new Contract(address, _abi, signerOrProvider) as IVaultConfigurator
  }
}
